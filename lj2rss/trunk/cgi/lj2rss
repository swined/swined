#!/usr/bin/perl

use warnings;
use strict;
use lib '/usr/share/lj2rss/lib';
use youtube;
use CGI qw/param/;
use XML::Writer;
use LWP::UserAgent;
use Cache::FastMmap;

my $ua = new LWP::UserAgent(cookie_jar => {});
my ($ll, $hp) = (param('login') || '', param('hash') || '');

my $cache = new Cache::FastMmap(
    share_file => '/var/cache/lj2rss/cache',
    expire_time => '1d',
    unlink_on_exit => 0,
    read_cb => sub {
	my $w = $ua->get($_[1] . '?format=light')->content;
	return if $w !~ /<blockquote>/s;
	my $t = $1 if $w =~ /<title>(.*?)<\/title>/s;
	local $_ = $w, s/^.*?<body >//s, s/<\/body>.*?$//s, 
	    s/^(.*?)<hr \/>.*?<hr \/>/$1/s, s/<br style='clear: both' \/>.*?$//s;
	{ subject => $t, content => $_ };
    },
);

sub login {
    my $post = $ua->post(
	'http://www.livejournal.com/interface/flat', 
	[
	    mode => 'sessiongenerate',
	    user => $ll,
	    hpassword => $hp,
	    expiration => 'short',
	],
    );
    return $post->status_line unless $post->is_success;
    my $s = { split /\n/, $post->content }->{ljsession};
    return sprintf 'no session<br><br>', $post->{content} unless $s;
    my $l = $s =~ /^.+?:(.+?:.+?):/ ? $1 : return sprintf 'bad session: %s', $s;
    $ua->cookie_jar->set_cookie(0, 'ljsession', $s, '/', '.livejournal.com');
    $ua->cookie_jar->set_cookie(0, 'ljloggedin', $l, '/', '.livejournal.com');
    return;
}

sub links {
    my $rs = $ua->get('http://www.livejournal.com/mobile/friends.bml?skip=' . param('skip'));
    grep s/.*: <a href='(.*?)\?.*?'>.*/$1/, split '<b', $rs->content;
}

sub getJName {
    map { return $1 if $_[0] =~ $_ } 
	('^http://(.*?)\.livejournal\.com/[0-9]*\.html',
	'^http://users\.livejournal\.com/(.*?)/[0-9]*\.html',
	'^http://community\.livejournal\.com/(.*?)/[0-9]*\.html');
    return undef;
}

sub addEntry {
    my ($xml, $lnk, $ttl, $dsc, $dtm) = @_;
    $xml->startTag('item');
    $xml->dataElement('guid', $lnk, isPermaLink => 'true');
    $xml->dataElement('link', $lnk);
    $xml->dataElement('title', $ttl);
    $xml->dataElement('description', $dsc);
    $xml->endTag;
}

print "content-type: text/xml; charset=utf-8\n\n";

my $xml = new XML::Writer(OUTPUT => *STDOUT);
$xml->startTag('rss', version => '2.0');
$xml->startTag('channel');
$xml->dataElement($_, "${ll}'s friends") for ('title', 'description');
$xml->dataElement('link', "http://www.livejournal.com/~$ll/friends");
if (my $e = login) {
    addEntry($xml, "http://$ENV{HTTP_HOST}/?rand=" . rand, 'error', 
	sprintf 'Could not log into your LJ account:<br>%s', $e);
} else {
    foreach (links) {
	my $et = eval { alarm 0; $cache->get($_); };
	if (my $e = $@) {
		next;
	}
	my $jn = getJName($_);
       	m|/(\d+)\.html$|;
	my $id = $1;
	if ($jn && $id) {
		my $u = "http://lj2rss.swined.net/comments.png?user=${jn}&itemid=${id}";
		$et->{content} .= "<br><a href='${_}'><img src='${u}'></a>";
	}
	$jn |= '***';
	$et->{content} = youtube::replace($et->{content});
	addEntry($xml, $_, ($et->{subject} or $jn . ': untitled'), $et->{content});
    }
}
$xml->dataElement('debug', '', 'time' => time - $^T);
$xml->endTag;
$xml->endTag;
$xml->end;
